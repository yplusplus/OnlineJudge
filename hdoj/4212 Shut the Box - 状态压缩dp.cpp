#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <functional>
#include <queue>

#define sf scanf
#define pf printf
#define FOR(i,a,b) for (int i=(a); i<(b);i++)
#define REP(i,b) FOR(i,0,b);

using namespace std;

int n, m;
int val[25];
int a[][100] = {
    {0},
    {1},
    {2},
    {3, 4},
    {5, 8},
    {6, 9, 16},
    {7, 10, 17, 32},
    {11, 12, 18, 33, 64},
    {13, 19, 20, 34, 65, 128},
    {14, 21, 24, 35, 36, 66, 129, 256},
    {15, 22, 25, 37, 40, 67, 68, 130, 257, 512},
    {23, 26, 38, 41, 48, 69, 72, 131, 132, 258, 513, 1024},
    {27, 28, 39, 42, 49, 70, 73, 80, 133, 136, 259, 260, 514, 1025, 2048},
    {29, 43, 44, 50, 71, 74, 81, 96, 134, 137, 144, 261, 264, 515, 516, 1026, 2049, 4096},
    {30, 45, 51, 52, 75, 76, 82, 97, 135, 138, 145, 160, 262, 265, 272, 517, 520, 1027, 1028, 2050, 4097, 8192},
    {31, 46, 53, 56, 77, 83, 84, 98, 139, 140, 146, 161, 192, 263, 266, 273, 288, 518, 521, 528, 1029, 1032, 2051, 2052, 4098, 8193, 16384},
    {47, 54, 57, 78, 85, 88, 99, 100, 141, 147, 148, 162, 193, 267, 268, 274, 289, 320, 519, 522, 529, 544, 1030, 1033, 1040, 2053, 2056, 4099, 4100, 8194, 16385, 32768},
    {55, 58, 79, 86, 89, 101, 104, 142, 149, 152, 163, 164, 194, 269, 275, 276, 290, 321, 384, 523, 524, 530, 545, 576, 1031, 1034, 1041, 1056, 2054, 2057, 2064, 4101, 4104, 8195, 8196, 16386, 32769, 65536},
    {59, 60, 87, 90, 102, 105, 112, 143, 150, 153, 165, 168, 195, 196, 270, 277, 280, 291, 292, 322, 385, 525, 531, 532, 546, 577, 640, 1035, 1036, 1042, 1057, 1088, 2055, 2058, 2065, 2080, 4102, 4105, 4112, 8197, 8200, 16387, 16388, 32770, 65537, 131072},
    {61, 91, 92, 103, 106, 113, 151, 154, 166, 169, 176, 197, 200, 271, 278, 281, 293, 296, 323, 324, 386, 526, 533, 536, 547, 548, 578, 641, 768, 1037, 1043, 1044, 1058, 1089, 1152, 2059, 2060, 2066, 2081, 2112, 4103, 4106, 4113, 4128, 8198, 8201, 8208, 16389, 16392, 32771, 32772, 65538, 131073, 262144},
    {62, 93, 107, 108, 114, 155, 156, 167, 170, 177, 198, 201, 208, 279, 282, 294, 297, 304, 325, 328, 387, 388, 527, 534, 537, 549, 552, 579, 580, 642, 769, 1038, 1045, 1048, 1059, 1060, 1090, 1153, 1280, 2061, 2067, 2068, 2082, 2113, 2176, 4107, 4108, 4114, 4129, 4160, 8199, 8202, 8209, 8224, 16390, 16393, 16400, 32773, 32776, 65539, 65540, 131074, 262145, 524288},
    {63, 94, 109, 115, 116, 157, 171, 172, 178, 199, 202, 209, 224, 283, 284, 295, 298, 305, 326, 329, 336, 389, 392, 535, 538, 550, 553, 560, 581, 584, 643, 644, 770, 1039, 1046, 1049, 1061, 1064, 1091, 1092, 1154, 1281, 1536, 2062, 2069, 2072, 2083, 2084, 2114, 2177, 2304, 4109, 4115, 4116, 4130, 4161, 4224, 8203, 8204, 8210, 8225, 8256, 16391, 16394, 16401, 16416, 32774, 32777, 32784, 65541, 65544, 131075, 131076, 262146, 524289, 1048576},
    {95, 110, 117, 120, 158, 173, 179, 180, 203, 204, 210, 225, 285, 299, 300, 306, 327, 330, 337, 352, 390, 393, 400, 539, 540, 551, 554, 561, 582, 585, 592, 645, 648, 771, 772, 1047, 1050, 1062, 1065, 1072, 1093, 1096, 1155, 1156, 1282, 1537, 2063, 2070, 2073, 2085, 2088, 2115, 2116, 2178, 2305, 2560, 4110, 4117, 4120, 4131, 4132, 4162, 4225, 4352, 8205, 8211, 8212, 8226, 8257, 8320, 16395, 16396, 16402, 16417, 16448, 32775, 32778, 32785, 32800, 65542, 65545, 65552, 131077, 131080, 262147, 262148, 524290, 1048577, 2097152}
};
int cnt[] = {0, 1, 1, 2, 2, 3, 4, 5, 6, 8, 10, 12, 15, 18, 22, 27, 32, 38, 46, 54, 64, 76, 89};

bool dp[2][1 << 23];

int main() {
    int Case = 1;
    while (~scanf("%d%d", &n, &m)) {
        if (!n && !m) break;
        memset(dp[0], 0, sizeof (dp[0]));
        for (int i = 1; i <= m; i++)
            scanf("%d", &val[i]);
        int now = 1, nxt = 0;
        int ans = 0;
        dp[0][0] = 1;
        for (int i = 1; i <= m + 1; i++) {
            swap(now, nxt);
            memset(dp[nxt], 0, sizeof(dp[nxt]));
            for (int j = 0; j < (1 << n); j++) {
                if (dp[now][j]) {
                    int cnt1 = 0;
                    for (int k = 0; k < n; k++)
                        if (j & (1 << k)) cnt1++;
                    ans = max(ans, cnt1);
                    if(i > m) continue;
                    for (int k = 0; k < cnt[val[i]]; k++) {
                        int tmp = a[val[i]][k];
                        if ((j & tmp)) continue;
                        int mask = (j | tmp);
                        dp[nxt][mask] = dp[now][j];
                    }
                }
            }
        }
        printf("Game %d: %d\n", Case++, ans);
    }
    return 0;

}

